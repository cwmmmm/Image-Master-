/********************************************************************************
** Form generated from reading UI file 'mainwindow.ui'
**
** Created by: Qt User Interface Compiler version 5.11.3
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MAINWINDOW_H
#define UI_MAINWINDOW_H

#include <QtCore/QVariant>
#include <QtGui/QIcon>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QLabel>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QScrollArea>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QWidget>
#include <paintlabel.h>

QT_BEGIN_NAMESPACE

class Ui_MainWindow
{
public:
    QAction *actionOpen;
    QAction *actionSave;
    QAction *actionTranslation;
    QAction *actionRotate_Right_90;
    QAction *actionRotate_180;
    QAction *actionRotate_Left_90;
    QAction *actionHorozontal_Mirror;
    QAction *actionVertical_Mirror;
    QAction *actionR_Type;
    QAction *actionG_Type;
    QAction *actionB_Type;
    QAction *actionLow_Sharpen;
    QAction *actionMedium_Sharpen;
    QAction *actionHigh_Sharpen;
    QAction *actionCustom_Sharpen;
    QAction *actionBrightness;
    QAction *actionContrast;
    QAction *actionLow_Reduce;
    QAction *actionHigh_Reduce;
    QAction *actionCustom_Reduce;
    QAction *actionHorizontal;
    QAction *actionVertical;
    QAction *actionPerspective_Transformation;
    QAction *actionAnalog_Double_Exposure;
    QAction *actionIntelligent_Image_Segmentation;
    QAction *actionSave_as;
    QAction *actionAlpha;
    QAction *actionBlack_White;
    QAction *actionGrey_Level;
    QAction *actionUndo;
    QAction *actionClose_Image;
    QAction *actionRedo;
    QAction *actionKeep_Red;
    QAction *actionKeep_Green;
    QAction *actionKeep_Blue;
    QAction *actionReduce_Red;
    QAction *actionReduce_Green;
    QAction *actionReduce_Blue;
    QAction *actionRGB_Controller;
    QAction *actionInvert_Color;
    QAction *actionCustom_Rotation;
    QAction *actionLaplacian_Enhancement;
    QAction *actionLaplacian_Enhancement_2;
    QAction *actionZoom_in;
    QAction *actionZoom_out;
    QAction *actionSynthetical;
    QAction *actionCut;
    QAction *actionAccept;
    QAction *actionCancel;
    QAction *actionDetection;
    QAction *actionBrownness;
    QAction *actionSaturation;
    QAction *actionScreen_Shot;
    QAction *actionContour;
    QAction *actionFrost_Glass;
    QAction *actionEmbossment;
    QAction *actionLow_Smooth;
    QAction *actionHigh_Smooth;
    QAction *actionFourierReal;
    QAction *actionFourierImaginary;
    QAction *actionFourierMagnitude;
    QAction *actionFourierPhase;
    QAction *actionScreen_Cut;
    QWidget *centralWidget;
    QGridLayout *gridLayout_2;
    QScrollArea *scrollArea;
    QWidget *scrollAreaWidgetContents;
    QLabel *label;
    PaintLabel *paintlable;
    PointLabel *pointlabel;
    QMenuBar *menuBar;
    QMenu *menuFile;
    QMenu *menuGeometry;
    QMenu *menuHistogram;
    QMenu *menuSharpen;
    QMenu *menuBasic;
    QMenu *menuNoise_Reduction;
    QMenu *menuEdge_Enhancement;
    QMenu *menu_Perspective_Transformation;
    QMenu *menuColor;
    QMenu *menuFilter;
    QMenu *menuSmooth;
    QToolBar *mainToolBar;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *MainWindow)
    {
        if (MainWindow->objectName().isEmpty())
            MainWindow->setObjectName(QStringLiteral("MainWindow"));
        MainWindow->resize(1000, 800);
        QIcon icon;
        icon.addFile(QStringLiteral(":/new/prefix1/Icon/Icon.png"), QSize(), QIcon::Normal, QIcon::Off);
        MainWindow->setWindowIcon(icon);
        actionOpen = new QAction(MainWindow);
        actionOpen->setObjectName(QStringLiteral("actionOpen"));
        actionOpen->setEnabled(true);
        QIcon icon1;
        icon1.addFile(QStringLiteral(":/new/prefix1/Icon/open.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionOpen->setIcon(icon1);
        actionSave = new QAction(MainWindow);
        actionSave->setObjectName(QStringLiteral("actionSave"));
        actionSave->setEnabled(false);
        QIcon icon2;
        icon2.addFile(QStringLiteral(":/new/prefix1/Icon/save.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionSave->setIcon(icon2);
        actionTranslation = new QAction(MainWindow);
        actionTranslation->setObjectName(QStringLiteral("actionTranslation"));
        actionTranslation->setEnabled(false);
        actionRotate_Right_90 = new QAction(MainWindow);
        actionRotate_Right_90->setObjectName(QStringLiteral("actionRotate_Right_90"));
        actionRotate_Right_90->setEnabled(false);
        QIcon icon3;
        icon3.addFile(QStringLiteral(":/new/prefix1/Icon/rotate_rignt90.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionRotate_Right_90->setIcon(icon3);
        actionRotate_180 = new QAction(MainWindow);
        actionRotate_180->setObjectName(QStringLiteral("actionRotate_180"));
        actionRotate_180->setEnabled(false);
        QIcon icon4;
        icon4.addFile(QStringLiteral(":/new/prefix1/Icon/rotate_180.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionRotate_180->setIcon(icon4);
        actionRotate_Left_90 = new QAction(MainWindow);
        actionRotate_Left_90->setObjectName(QStringLiteral("actionRotate_Left_90"));
        actionRotate_Left_90->setEnabled(false);
        QIcon icon5;
        icon5.addFile(QStringLiteral(":/new/prefix1/Icon/rotate_left90.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionRotate_Left_90->setIcon(icon5);
        actionHorozontal_Mirror = new QAction(MainWindow);
        actionHorozontal_Mirror->setObjectName(QStringLiteral("actionHorozontal_Mirror"));
        actionHorozontal_Mirror->setEnabled(false);
        QIcon icon6;
        icon6.addFile(QStringLiteral(":/new/prefix1/Icon/Horizontal Mirror.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionHorozontal_Mirror->setIcon(icon6);
        actionVertical_Mirror = new QAction(MainWindow);
        actionVertical_Mirror->setObjectName(QStringLiteral("actionVertical_Mirror"));
        actionVertical_Mirror->setEnabled(false);
        QIcon icon7;
        icon7.addFile(QStringLiteral(":/new/prefix1/Icon/Vertical Mirror.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionVertical_Mirror->setIcon(icon7);
        actionR_Type = new QAction(MainWindow);
        actionR_Type->setObjectName(QStringLiteral("actionR_Type"));
        actionR_Type->setEnabled(false);
        QIcon icon8;
        icon8.addFile(QStringLiteral(":/new/prefix1/Icon/Red Histogram.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionR_Type->setIcon(icon8);
        actionG_Type = new QAction(MainWindow);
        actionG_Type->setObjectName(QStringLiteral("actionG_Type"));
        actionG_Type->setEnabled(false);
        QIcon icon9;
        icon9.addFile(QStringLiteral(":/new/prefix1/Icon/Green Histogram.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionG_Type->setIcon(icon9);
        actionB_Type = new QAction(MainWindow);
        actionB_Type->setObjectName(QStringLiteral("actionB_Type"));
        actionB_Type->setEnabled(false);
        QIcon icon10;
        icon10.addFile(QStringLiteral(":/new/prefix1/Icon/Blue Histogram.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionB_Type->setIcon(icon10);
        actionLow_Sharpen = new QAction(MainWindow);
        actionLow_Sharpen->setObjectName(QStringLiteral("actionLow_Sharpen"));
        actionLow_Sharpen->setEnabled(false);
        QIcon icon11;
        icon11.addFile(QStringLiteral(":/new/prefix1/Icon/LowSharpen.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionLow_Sharpen->setIcon(icon11);
        actionMedium_Sharpen = new QAction(MainWindow);
        actionMedium_Sharpen->setObjectName(QStringLiteral("actionMedium_Sharpen"));
        actionMedium_Sharpen->setEnabled(false);
        actionHigh_Sharpen = new QAction(MainWindow);
        actionHigh_Sharpen->setObjectName(QStringLiteral("actionHigh_Sharpen"));
        actionHigh_Sharpen->setEnabled(false);
        QIcon icon12;
        icon12.addFile(QStringLiteral(":/new/prefix1/Icon/HighSharpen.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionHigh_Sharpen->setIcon(icon12);
        actionCustom_Sharpen = new QAction(MainWindow);
        actionCustom_Sharpen->setObjectName(QStringLiteral("actionCustom_Sharpen"));
        actionCustom_Sharpen->setEnabled(false);
        QIcon icon13;
        icon13.addFile(QStringLiteral(":/new/prefix1/Icon/CustomSharpen.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionCustom_Sharpen->setIcon(icon13);
        actionBrightness = new QAction(MainWindow);
        actionBrightness->setObjectName(QStringLiteral("actionBrightness"));
        actionBrightness->setEnabled(false);
        QIcon icon14;
        icon14.addFile(QStringLiteral(":/new/prefix1/Icon/brightness.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionBrightness->setIcon(icon14);
        actionContrast = new QAction(MainWindow);
        actionContrast->setObjectName(QStringLiteral("actionContrast"));
        actionContrast->setEnabled(false);
        QIcon icon15;
        icon15.addFile(QStringLiteral(":/new/prefix1/Icon/contrast.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionContrast->setIcon(icon15);
        actionLow_Reduce = new QAction(MainWindow);
        actionLow_Reduce->setObjectName(QStringLiteral("actionLow_Reduce"));
        actionLow_Reduce->setEnabled(false);
        QIcon icon16;
        icon16.addFile(QStringLiteral(":/new/prefix1/Icon/LowReduce.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionLow_Reduce->setIcon(icon16);
        actionHigh_Reduce = new QAction(MainWindow);
        actionHigh_Reduce->setObjectName(QStringLiteral("actionHigh_Reduce"));
        actionHigh_Reduce->setEnabled(false);
        QIcon icon17;
        icon17.addFile(QStringLiteral(":/new/prefix1/Icon/HighReduce.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionHigh_Reduce->setIcon(icon17);
        actionCustom_Reduce = new QAction(MainWindow);
        actionCustom_Reduce->setObjectName(QStringLiteral("actionCustom_Reduce"));
        actionCustom_Reduce->setEnabled(false);
        QIcon icon18;
        icon18.addFile(QStringLiteral(":/new/prefix1/Icon/CustomReduce.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionCustom_Reduce->setIcon(icon18);
        actionHorizontal = new QAction(MainWindow);
        actionHorizontal->setObjectName(QStringLiteral("actionHorizontal"));
        actionHorizontal->setEnabled(false);
        QIcon icon19;
        icon19.addFile(QStringLiteral(":/new/prefix1/Icon/Horizontal.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionHorizontal->setIcon(icon19);
        actionVertical = new QAction(MainWindow);
        actionVertical->setObjectName(QStringLiteral("actionVertical"));
        actionVertical->setEnabled(false);
        QIcon icon20;
        icon20.addFile(QStringLiteral(":/new/prefix1/Icon/Vertical.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionVertical->setIcon(icon20);
        actionPerspective_Transformation = new QAction(MainWindow);
        actionPerspective_Transformation->setObjectName(QStringLiteral("actionPerspective_Transformation"));
        actionPerspective_Transformation->setEnabled(false);
        QIcon icon21;
        icon21.addFile(QStringLiteral(":/new/prefix1/Icon/perspective.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionPerspective_Transformation->setIcon(icon21);
        actionAnalog_Double_Exposure = new QAction(MainWindow);
        actionAnalog_Double_Exposure->setObjectName(QStringLiteral("actionAnalog_Double_Exposure"));
        actionAnalog_Double_Exposure->setEnabled(false);
        QIcon icon22;
        icon22.addFile(QStringLiteral(":/new/prefix1/Icon/exposure.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionAnalog_Double_Exposure->setIcon(icon22);
        actionIntelligent_Image_Segmentation = new QAction(MainWindow);
        actionIntelligent_Image_Segmentation->setObjectName(QStringLiteral("actionIntelligent_Image_Segmentation"));
        actionIntelligent_Image_Segmentation->setEnabled(false);
        QIcon icon23;
        icon23.addFile(QStringLiteral(":/new/prefix1/Icon/segmentation.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionIntelligent_Image_Segmentation->setIcon(icon23);
        actionSave_as = new QAction(MainWindow);
        actionSave_as->setObjectName(QStringLiteral("actionSave_as"));
        actionSave_as->setEnabled(false);
        QIcon icon24;
        icon24.addFile(QStringLiteral(":/new/prefix1/Icon/Save as.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionSave_as->setIcon(icon24);
        actionAlpha = new QAction(MainWindow);
        actionAlpha->setObjectName(QStringLiteral("actionAlpha"));
        actionAlpha->setEnabled(false);
        QIcon icon25;
        icon25.addFile(QStringLiteral(":/new/prefix1/Icon/alpha.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionAlpha->setIcon(icon25);
        actionBlack_White = new QAction(MainWindow);
        actionBlack_White->setObjectName(QStringLiteral("actionBlack_White"));
        actionBlack_White->setEnabled(false);
        QIcon icon26;
        icon26.addFile(QStringLiteral(":/new/prefix1/Icon/black and white.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionBlack_White->setIcon(icon26);
        actionGrey_Level = new QAction(MainWindow);
        actionGrey_Level->setObjectName(QStringLiteral("actionGrey_Level"));
        actionGrey_Level->setEnabled(false);
        QIcon icon27;
        icon27.addFile(QStringLiteral(":/new/prefix1/Icon/Grey level.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionGrey_Level->setIcon(icon27);
        actionUndo = new QAction(MainWindow);
        actionUndo->setObjectName(QStringLiteral("actionUndo"));
        actionUndo->setEnabled(false);
        QIcon icon28;
        icon28.addFile(QStringLiteral(":/new/prefix1/Icon/Undo.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionUndo->setIcon(icon28);
        actionClose_Image = new QAction(MainWindow);
        actionClose_Image->setObjectName(QStringLiteral("actionClose_Image"));
        actionClose_Image->setEnabled(false);
        QIcon icon29;
        icon29.addFile(QStringLiteral(":/new/prefix1/Icon/close.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionClose_Image->setIcon(icon29);
        actionRedo = new QAction(MainWindow);
        actionRedo->setObjectName(QStringLiteral("actionRedo"));
        actionRedo->setEnabled(false);
        QIcon icon30;
        icon30.addFile(QStringLiteral(":/new/prefix1/Icon/Redo.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionRedo->setIcon(icon30);
        actionKeep_Red = new QAction(MainWindow);
        actionKeep_Red->setObjectName(QStringLiteral("actionKeep_Red"));
        actionKeep_Red->setEnabled(false);
        QIcon icon31;
        icon31.addFile(QStringLiteral(":/new/prefix1/Icon/Red.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionKeep_Red->setIcon(icon31);
        actionKeep_Green = new QAction(MainWindow);
        actionKeep_Green->setObjectName(QStringLiteral("actionKeep_Green"));
        actionKeep_Green->setEnabled(false);
        QIcon icon32;
        icon32.addFile(QStringLiteral(":/new/prefix1/Icon/Green.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionKeep_Green->setIcon(icon32);
        actionKeep_Blue = new QAction(MainWindow);
        actionKeep_Blue->setObjectName(QStringLiteral("actionKeep_Blue"));
        actionKeep_Blue->setEnabled(false);
        QIcon icon33;
        icon33.addFile(QStringLiteral(":/new/prefix1/Icon/Blue.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionKeep_Blue->setIcon(icon33);
        actionReduce_Red = new QAction(MainWindow);
        actionReduce_Red->setObjectName(QStringLiteral("actionReduce_Red"));
        actionReduce_Red->setEnabled(false);
        QIcon icon34;
        icon34.addFile(QStringLiteral(":/new/prefix1/Icon/Reduce Red.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionReduce_Red->setIcon(icon34);
        actionReduce_Green = new QAction(MainWindow);
        actionReduce_Green->setObjectName(QStringLiteral("actionReduce_Green"));
        actionReduce_Green->setEnabled(false);
        QIcon icon35;
        icon35.addFile(QStringLiteral(":/new/prefix1/Icon/Reduce Green.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionReduce_Green->setIcon(icon35);
        actionReduce_Blue = new QAction(MainWindow);
        actionReduce_Blue->setObjectName(QStringLiteral("actionReduce_Blue"));
        actionReduce_Blue->setEnabled(false);
        QIcon icon36;
        icon36.addFile(QStringLiteral(":/new/prefix1/Icon/Reduce Blue.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionReduce_Blue->setIcon(icon36);
        actionRGB_Controller = new QAction(MainWindow);
        actionRGB_Controller->setObjectName(QStringLiteral("actionRGB_Controller"));
        actionRGB_Controller->setEnabled(false);
        QIcon icon37;
        icon37.addFile(QStringLiteral(":/new/prefix1/Icon/RGB.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionRGB_Controller->setIcon(icon37);
        actionInvert_Color = new QAction(MainWindow);
        actionInvert_Color->setObjectName(QStringLiteral("actionInvert_Color"));
        actionInvert_Color->setEnabled(false);
        QIcon icon38;
        icon38.addFile(QStringLiteral(":/new/prefix1/Icon/InvertColor.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionInvert_Color->setIcon(icon38);
        actionCustom_Rotation = new QAction(MainWindow);
        actionCustom_Rotation->setObjectName(QStringLiteral("actionCustom_Rotation"));
        actionCustom_Rotation->setEnabled(false);
        QIcon icon39;
        icon39.addFile(QStringLiteral(":/new/prefix1/Icon/CustomRotate.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionCustom_Rotation->setIcon(icon39);
        actionLaplacian_Enhancement = new QAction(MainWindow);
        actionLaplacian_Enhancement->setObjectName(QStringLiteral("actionLaplacian_Enhancement"));
        actionLaplacian_Enhancement->setCheckable(false);
        actionLaplacian_Enhancement->setEnabled(true);
        actionLaplacian_Enhancement_2 = new QAction(MainWindow);
        actionLaplacian_Enhancement_2->setObjectName(QStringLiteral("actionLaplacian_Enhancement_2"));
        actionZoom_in = new QAction(MainWindow);
        actionZoom_in->setObjectName(QStringLiteral("actionZoom_in"));
        actionZoom_in->setEnabled(false);
        QIcon icon40;
        icon40.addFile(QStringLiteral(":/new/prefix1/Icon/Zoom in.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionZoom_in->setIcon(icon40);
        actionZoom_out = new QAction(MainWindow);
        actionZoom_out->setObjectName(QStringLiteral("actionZoom_out"));
        actionZoom_out->setEnabled(false);
        QIcon icon41;
        icon41.addFile(QStringLiteral(":/new/prefix1/Icon/Zoom out.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionZoom_out->setIcon(icon41);
        actionSynthetical = new QAction(MainWindow);
        actionSynthetical->setObjectName(QStringLiteral("actionSynthetical"));
        actionSynthetical->setEnabled(false);
        QIcon icon42;
        icon42.addFile(QStringLiteral(":/new/prefix1/Icon/Synthetical Histogram.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionSynthetical->setIcon(icon42);
        actionCut = new QAction(MainWindow);
        actionCut->setObjectName(QStringLiteral("actionCut"));
        actionCut->setEnabled(false);
        QIcon icon43;
        icon43.addFile(QStringLiteral(":/new/prefix1/Icon/Cut.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionCut->setIcon(icon43);
        actionAccept = new QAction(MainWindow);
        actionAccept->setObjectName(QStringLiteral("actionAccept"));
        actionAccept->setEnabled(false);
        QIcon icon44;
        icon44.addFile(QStringLiteral(":/new/prefix1/Icon/Accept.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionAccept->setIcon(icon44);
        actionCancel = new QAction(MainWindow);
        actionCancel->setObjectName(QStringLiteral("actionCancel"));
        actionCancel->setEnabled(false);
        QIcon icon45;
        icon45.addFile(QStringLiteral(":/new/prefix1/Icon/Cancel.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionCancel->setIcon(icon45);
        actionDetection = new QAction(MainWindow);
        actionDetection->setObjectName(QStringLiteral("actionDetection"));
        actionDetection->setEnabled(false);
        QIcon icon46;
        icon46.addFile(QStringLiteral(":/new/prefix1/Icon/Detection.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionDetection->setIcon(icon46);
        actionBrownness = new QAction(MainWindow);
        actionBrownness->setObjectName(QStringLiteral("actionBrownness"));
        actionBrownness->setEnabled(false);
        QIcon icon47;
        icon47.addFile(QStringLiteral(":/new/prefix1/Icon/Browness.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionBrownness->setIcon(icon47);
        actionSaturation = new QAction(MainWindow);
        actionSaturation->setObjectName(QStringLiteral("actionSaturation"));
        actionSaturation->setEnabled(false);
        QIcon icon48;
        icon48.addFile(QStringLiteral(":/new/prefix1/Icon/saturation.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionSaturation->setIcon(icon48);
        actionScreen_Shot = new QAction(MainWindow);
        actionScreen_Shot->setObjectName(QStringLiteral("actionScreen_Shot"));
        actionScreen_Shot->setEnabled(true);
        QIcon icon49;
        icon49.addFile(QStringLiteral(":/new/prefix1/Icon/Screenshot.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionScreen_Shot->setIcon(icon49);
        actionContour = new QAction(MainWindow);
        actionContour->setObjectName(QStringLiteral("actionContour"));
        actionContour->setEnabled(false);
        QIcon icon50;
        icon50.addFile(QStringLiteral(":/new/prefix1/Icon/contour.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionContour->setIcon(icon50);
        actionFrost_Glass = new QAction(MainWindow);
        actionFrost_Glass->setObjectName(QStringLiteral("actionFrost_Glass"));
        actionFrost_Glass->setEnabled(false);
        QIcon icon51;
        icon51.addFile(QStringLiteral(":/new/prefix1/Icon/glass.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionFrost_Glass->setIcon(icon51);
        actionEmbossment = new QAction(MainWindow);
        actionEmbossment->setObjectName(QStringLiteral("actionEmbossment"));
        actionEmbossment->setEnabled(false);
        QIcon icon52;
        icon52.addFile(QStringLiteral(":/new/prefix1/Icon/embossment.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionEmbossment->setIcon(icon52);
        actionLow_Smooth = new QAction(MainWindow);
        actionLow_Smooth->setObjectName(QStringLiteral("actionLow_Smooth"));
        actionLow_Smooth->setEnabled(false);
        QIcon icon53;
        icon53.addFile(QStringLiteral(":/new/prefix1/Icon/LowSmooth.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionLow_Smooth->setIcon(icon53);
        actionHigh_Smooth = new QAction(MainWindow);
        actionHigh_Smooth->setObjectName(QStringLiteral("actionHigh_Smooth"));
        actionHigh_Smooth->setEnabled(false);
        QIcon icon54;
        icon54.addFile(QStringLiteral(":/new/prefix1/Icon/HighSmooth.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionHigh_Smooth->setIcon(icon54);
        actionFourierReal = new QAction(MainWindow);
        actionFourierReal->setObjectName(QStringLiteral("actionFourierReal"));
        actionFourierReal->setEnabled(false);
        QIcon icon55;
        icon55.addFile(QStringLiteral(":/new/prefix1/Icon/Real.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionFourierReal->setIcon(icon55);
        actionFourierImaginary = new QAction(MainWindow);
        actionFourierImaginary->setObjectName(QStringLiteral("actionFourierImaginary"));
        actionFourierImaginary->setEnabled(false);
        QIcon icon56;
        icon56.addFile(QStringLiteral(":/new/prefix1/Icon/Imaginary.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionFourierImaginary->setIcon(icon56);
        actionFourierMagnitude = new QAction(MainWindow);
        actionFourierMagnitude->setObjectName(QStringLiteral("actionFourierMagnitude"));
        actionFourierMagnitude->setEnabled(false);
        QIcon icon57;
        icon57.addFile(QStringLiteral(":/new/prefix1/Icon/Magnitude.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionFourierMagnitude->setIcon(icon57);
        actionFourierPhase = new QAction(MainWindow);
        actionFourierPhase->setObjectName(QStringLiteral("actionFourierPhase"));
        actionFourierPhase->setEnabled(false);
        QIcon icon58;
        icon58.addFile(QStringLiteral(":/new/prefix1/Icon/Phase.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionFourierPhase->setIcon(icon58);
        actionScreen_Cut = new QAction(MainWindow);
        actionScreen_Cut->setObjectName(QStringLiteral("actionScreen_Cut"));
        actionScreen_Cut->setIcon(icon49);
        centralWidget = new QWidget(MainWindow);
        centralWidget->setObjectName(QStringLiteral("centralWidget"));
        centralWidget->setEnabled(true);
        gridLayout_2 = new QGridLayout(centralWidget);
        gridLayout_2->setSpacing(6);
        gridLayout_2->setContentsMargins(11, 11, 11, 11);
        gridLayout_2->setObjectName(QStringLiteral("gridLayout_2"));
        scrollArea = new QScrollArea(centralWidget);
        scrollArea->setObjectName(QStringLiteral("scrollArea"));
        scrollArea->setMinimumSize(QSize(500, 600));
        scrollArea->setWidgetResizable(true);
        scrollAreaWidgetContents = new QWidget();
        scrollAreaWidgetContents->setObjectName(QStringLiteral("scrollAreaWidgetContents"));
        scrollAreaWidgetContents->setGeometry(QRect(0, 0, 976, 685));
        scrollAreaWidgetContents->setMinimumSize(QSize(500, 500));
        label = new QLabel(scrollAreaWidgetContents);
        label->setObjectName(QStringLiteral("label"));
        label->setEnabled(true);
        label->setGeometry(QRect(11, 11, 16, 17));
        paintlable = new PaintLabel(scrollAreaWidgetContents);
        paintlable->setObjectName(QStringLiteral("paintlable"));
        paintlable->setGeometry(QRect(20, 50, 16, 16));
        pointlabel = new PointLabel(scrollAreaWidgetContents);
        pointlabel->setObjectName(QStringLiteral("pointlabel"));
        pointlabel->setGeometry(QRect(20, 80, 16, 16));
        scrollArea->setWidget(scrollAreaWidgetContents);

        gridLayout_2->addWidget(scrollArea, 0, 0, 1, 1);

        MainWindow->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(MainWindow);
        menuBar->setObjectName(QStringLiteral("menuBar"));
        menuBar->setGeometry(QRect(0, 0, 1000, 26));
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName(QStringLiteral("menuFile"));
        menuGeometry = new QMenu(menuBar);
        menuGeometry->setObjectName(QStringLiteral("menuGeometry"));
        menuHistogram = new QMenu(menuBar);
        menuHistogram->setObjectName(QStringLiteral("menuHistogram"));
        menuSharpen = new QMenu(menuBar);
        menuSharpen->setObjectName(QStringLiteral("menuSharpen"));
        menuBasic = new QMenu(menuBar);
        menuBasic->setObjectName(QStringLiteral("menuBasic"));
        menuNoise_Reduction = new QMenu(menuBar);
        menuNoise_Reduction->setObjectName(QStringLiteral("menuNoise_Reduction"));
        menuEdge_Enhancement = new QMenu(menuBar);
        menuEdge_Enhancement->setObjectName(QStringLiteral("menuEdge_Enhancement"));
        menu_Perspective_Transformation = new QMenu(menuBar);
        menu_Perspective_Transformation->setObjectName(QStringLiteral("menu_Perspective_Transformation"));
        menu_Perspective_Transformation->setEnabled(true);
        menuColor = new QMenu(menuBar);
        menuColor->setObjectName(QStringLiteral("menuColor"));
        menuFilter = new QMenu(menuBar);
        menuFilter->setObjectName(QStringLiteral("menuFilter"));
        menuSmooth = new QMenu(menuBar);
        menuSmooth->setObjectName(QStringLiteral("menuSmooth"));
        MainWindow->setMenuBar(menuBar);
        mainToolBar = new QToolBar(MainWindow);
        mainToolBar->setObjectName(QStringLiteral("mainToolBar"));
        mainToolBar->setEnabled(true);
        MainWindow->addToolBar(Qt::TopToolBarArea, mainToolBar);
        statusBar = new QStatusBar(MainWindow);
        statusBar->setObjectName(QStringLiteral("statusBar"));
        MainWindow->setStatusBar(statusBar);

        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuBasic->menuAction());
        menuBar->addAction(menuColor->menuAction());
        menuBar->addAction(menuGeometry->menuAction());
        menuBar->addAction(menuHistogram->menuAction());
        menuBar->addAction(menuSharpen->menuAction());
        menuBar->addAction(menuSmooth->menuAction());
        menuBar->addAction(menuNoise_Reduction->menuAction());
        menuBar->addAction(menuFilter->menuAction());
        menuBar->addAction(menuEdge_Enhancement->menuAction());
        menuBar->addAction(menu_Perspective_Transformation->menuAction());
        menuFile->addAction(actionOpen);
        menuFile->addAction(actionClose_Image);
        menuFile->addAction(actionSave);
        menuFile->addAction(actionSave_as);
        menuFile->addAction(actionUndo);
        menuFile->addAction(actionRedo);
        menuGeometry->addAction(actionRotate_Right_90);
        menuGeometry->addAction(actionRotate_180);
        menuGeometry->addAction(actionRotate_Left_90);
        menuGeometry->addAction(actionCustom_Rotation);
        menuGeometry->addSeparator();
        menuGeometry->addAction(actionHorozontal_Mirror);
        menuGeometry->addAction(actionVertical_Mirror);
        menuGeometry->addSeparator();
        menuGeometry->addAction(actionZoom_in);
        menuGeometry->addAction(actionZoom_out);
        menuHistogram->addAction(actionR_Type);
        menuHistogram->addAction(actionG_Type);
        menuHistogram->addAction(actionB_Type);
        menuHistogram->addAction(actionSynthetical);
        menuSharpen->addAction(actionLow_Sharpen);
        menuSharpen->addAction(actionHigh_Sharpen);
        menuSharpen->addAction(actionCustom_Sharpen);
        menuBasic->addAction(actionCut);
        menuBasic->addAction(actionScreen_Shot);
        menuBasic->addAction(actionScreen_Cut);
        menuBasic->addSeparator();
        menuBasic->addAction(actionBrightness);
        menuBasic->addAction(actionSaturation);
        menuBasic->addAction(actionContrast);
        menuBasic->addAction(actionAlpha);
        menuBasic->addAction(actionBlack_White);
        menuBasic->addAction(actionGrey_Level);
        menuNoise_Reduction->addAction(actionLow_Reduce);
        menuNoise_Reduction->addAction(actionHigh_Reduce);
        menuNoise_Reduction->addAction(actionCustom_Reduce);
        menuEdge_Enhancement->addAction(actionHorizontal);
        menuEdge_Enhancement->addAction(actionVertical);
        menuEdge_Enhancement->addAction(actionContour);
        menuEdge_Enhancement->addAction(actionDetection);
        menu_Perspective_Transformation->addAction(actionPerspective_Transformation);
        menu_Perspective_Transformation->addAction(actionAnalog_Double_Exposure);
        menu_Perspective_Transformation->addAction(actionIntelligent_Image_Segmentation);
        menu_Perspective_Transformation->addSeparator();
        menu_Perspective_Transformation->addAction(actionFourierReal);
        menu_Perspective_Transformation->addAction(actionFourierImaginary);
        menu_Perspective_Transformation->addAction(actionFourierMagnitude);
        menu_Perspective_Transformation->addAction(actionFourierPhase);
        menuColor->addAction(actionKeep_Red);
        menuColor->addAction(actionKeep_Green);
        menuColor->addAction(actionKeep_Blue);
        menuColor->addSeparator();
        menuColor->addAction(actionReduce_Red);
        menuColor->addAction(actionReduce_Green);
        menuColor->addAction(actionReduce_Blue);
        menuColor->addSeparator();
        menuColor->addAction(actionInvert_Color);
        menuColor->addSeparator();
        menuColor->addAction(actionRGB_Controller);
        menuFilter->addAction(actionBrownness);
        menuFilter->addAction(actionFrost_Glass);
        menuFilter->addAction(actionEmbossment);
        menuSmooth->addAction(actionLow_Smooth);
        menuSmooth->addAction(actionHigh_Smooth);
        mainToolBar->addAction(actionOpen);
        mainToolBar->addAction(actionClose_Image);
        mainToolBar->addAction(actionSave);
        mainToolBar->addAction(actionSave_as);
        mainToolBar->addAction(actionUndo);
        mainToolBar->addAction(actionRedo);
        mainToolBar->addAction(actionScreen_Shot);
        mainToolBar->addSeparator();
        mainToolBar->addAction(actionZoom_in);
        mainToolBar->addAction(actionZoom_out);
        mainToolBar->addSeparator();
        mainToolBar->addAction(actionCut);
        mainToolBar->addAction(actionAccept);
        mainToolBar->addAction(actionCancel);
        mainToolBar->addSeparator();
        mainToolBar->addAction(actionRotate_Right_90);
        mainToolBar->addAction(actionRotate_180);
        mainToolBar->addAction(actionRotate_Left_90);
        mainToolBar->addAction(actionHorozontal_Mirror);
        mainToolBar->addAction(actionVertical_Mirror);
        mainToolBar->addSeparator();
        mainToolBar->addAction(actionLow_Sharpen);
        mainToolBar->addAction(actionLow_Smooth);
        mainToolBar->addSeparator();
        mainToolBar->addAction(actionBrownness);
        mainToolBar->addAction(actionFrost_Glass);
        mainToolBar->addAction(actionEmbossment);

        retranslateUi(MainWindow);

        QMetaObject::connectSlotsByName(MainWindow);
    } // setupUi

    void retranslateUi(QMainWindow *MainWindow)
    {
        MainWindow->setWindowTitle(QApplication::translate("MainWindow", "ImageMaster", nullptr));
        actionOpen->setText(QApplication::translate("MainWindow", "Open", nullptr));
        actionSave->setText(QApplication::translate("MainWindow", "Save", nullptr));
        actionTranslation->setText(QApplication::translate("MainWindow", "Translation", nullptr));
        actionRotate_Right_90->setText(QApplication::translate("MainWindow", "Rotate Right 90\302\260", nullptr));
        actionRotate_180->setText(QApplication::translate("MainWindow", "Rotate 180\302\260", nullptr));
        actionRotate_Left_90->setText(QApplication::translate("MainWindow", "Rotate Left 90\302\260", nullptr));
        actionHorozontal_Mirror->setText(QApplication::translate("MainWindow", "Horizontal Mirror", nullptr));
        actionVertical_Mirror->setText(QApplication::translate("MainWindow", "Vertical Mirror", nullptr));
        actionR_Type->setText(QApplication::translate("MainWindow", "R-Type", nullptr));
        actionG_Type->setText(QApplication::translate("MainWindow", "G-Type", nullptr));
        actionB_Type->setText(QApplication::translate("MainWindow", "B-Type", nullptr));
        actionLow_Sharpen->setText(QApplication::translate("MainWindow", "Low-Sharpen", nullptr));
        actionMedium_Sharpen->setText(QApplication::translate("MainWindow", "Mid-Sharpen", nullptr));
        actionHigh_Sharpen->setText(QApplication::translate("MainWindow", "High-Sharpen", nullptr));
        actionCustom_Sharpen->setText(QApplication::translate("MainWindow", "Custom Degree...", nullptr));
        actionBrightness->setText(QApplication::translate("MainWindow", "Brightness", nullptr));
        actionContrast->setText(QApplication::translate("MainWindow", "Contrast", nullptr));
        actionLow_Reduce->setText(QApplication::translate("MainWindow", "Low-Reduce", nullptr));
        actionHigh_Reduce->setText(QApplication::translate("MainWindow", "High-Reduce", nullptr));
        actionCustom_Reduce->setText(QApplication::translate("MainWindow", "Custom-Degree", nullptr));
        actionHorizontal->setText(QApplication::translate("MainWindow", "Horizontal", nullptr));
        actionVertical->setText(QApplication::translate("MainWindow", "Vertical", nullptr));
        actionPerspective_Transformation->setText(QApplication::translate("MainWindow", "Perspective Transformation", nullptr));
        actionAnalog_Double_Exposure->setText(QApplication::translate("MainWindow", "Analog Double Exposure", nullptr));
        actionIntelligent_Image_Segmentation->setText(QApplication::translate("MainWindow", "Intelligent Image Segmentation", nullptr));
        actionSave_as->setText(QApplication::translate("MainWindow", "Save as", nullptr));
        actionAlpha->setText(QApplication::translate("MainWindow", "Alpha", nullptr));
        actionBlack_White->setText(QApplication::translate("MainWindow", "Black-White", nullptr));
        actionGrey_Level->setText(QApplication::translate("MainWindow", "Grey-Level", nullptr));
        actionUndo->setText(QApplication::translate("MainWindow", "Undo", nullptr));
        actionClose_Image->setText(QApplication::translate("MainWindow", "Close", nullptr));
        actionRedo->setText(QApplication::translate("MainWindow", "Redo", nullptr));
        actionKeep_Red->setText(QApplication::translate("MainWindow", "Keep Red", nullptr));
        actionKeep_Green->setText(QApplication::translate("MainWindow", "Keep Green", nullptr));
        actionKeep_Blue->setText(QApplication::translate("MainWindow", "Keep Blue", nullptr));
        actionReduce_Red->setText(QApplication::translate("MainWindow", "Reduce Red", nullptr));
        actionReduce_Green->setText(QApplication::translate("MainWindow", "Reduce Green", nullptr));
        actionReduce_Blue->setText(QApplication::translate("MainWindow", "Reduce Blue", nullptr));
        actionRGB_Controller->setText(QApplication::translate("MainWindow", "RGB Controller", nullptr));
        actionInvert_Color->setText(QApplication::translate("MainWindow", "Invert Color", nullptr));
        actionCustom_Rotation->setText(QApplication::translate("MainWindow", "Custom Rotation", nullptr));
        actionLaplacian_Enhancement->setText(QApplication::translate("MainWindow", "Laplacian Enhancement", nullptr));
        actionLaplacian_Enhancement_2->setText(QApplication::translate("MainWindow", "Laplacian-Enhancement", nullptr));
        actionZoom_in->setText(QApplication::translate("MainWindow", "Zoom in", nullptr));
        actionZoom_out->setText(QApplication::translate("MainWindow", "Zoom out", nullptr));
        actionSynthetical->setText(QApplication::translate("MainWindow", "Synthetical", nullptr));
        actionCut->setText(QApplication::translate("MainWindow", "Cut", nullptr));
        actionAccept->setText(QApplication::translate("MainWindow", "Accept", nullptr));
#ifndef QT_NO_TOOLTIP
        actionAccept->setToolTip(QApplication::translate("MainWindow", "Accept", nullptr));
#endif // QT_NO_TOOLTIP
        actionCancel->setText(QApplication::translate("MainWindow", "Cancel", nullptr));
#ifndef QT_NO_TOOLTIP
        actionCancel->setToolTip(QApplication::translate("MainWindow", "Cancel", nullptr));
#endif // QT_NO_TOOLTIP
        actionDetection->setText(QApplication::translate("MainWindow", "Detection", nullptr));
        actionBrownness->setText(QApplication::translate("MainWindow", "Brownness", nullptr));
        actionSaturation->setText(QApplication::translate("MainWindow", "Saturation", nullptr));
        actionScreen_Shot->setText(QApplication::translate("MainWindow", "Screen Shot", nullptr));
        actionContour->setText(QApplication::translate("MainWindow", "Contour", nullptr));
        actionFrost_Glass->setText(QApplication::translate("MainWindow", "Frost Glass", nullptr));
        actionEmbossment->setText(QApplication::translate("MainWindow", "Embossment", nullptr));
        actionLow_Smooth->setText(QApplication::translate("MainWindow", "Low Smooth", nullptr));
        actionHigh_Smooth->setText(QApplication::translate("MainWindow", "High Smooth", nullptr));
        actionFourierReal->setText(QApplication::translate("MainWindow", "Fourier Real", nullptr));
        actionFourierImaginary->setText(QApplication::translate("MainWindow", "Fourier Imaginary", nullptr));
        actionFourierMagnitude->setText(QApplication::translate("MainWindow", "Fourier Magnitude", nullptr));
        actionFourierPhase->setText(QApplication::translate("MainWindow", "Fourier Phase", nullptr));
        actionScreen_Cut->setText(QApplication::translate("MainWindow", "Screen Cut", nullptr));
        label->setText(QString());
        paintlable->setText(QString());
        pointlabel->setText(QString());
        menuFile->setTitle(QApplication::translate("MainWindow", "File", nullptr));
        menuGeometry->setTitle(QApplication::translate("MainWindow", "Geometry", nullptr));
        menuHistogram->setTitle(QApplication::translate("MainWindow", "Histogram", nullptr));
        menuSharpen->setTitle(QApplication::translate("MainWindow", "Sharpen", nullptr));
        menuBasic->setTitle(QApplication::translate("MainWindow", "Basic", nullptr));
        menuNoise_Reduction->setTitle(QApplication::translate("MainWindow", "Noise Reduction", nullptr));
        menuEdge_Enhancement->setTitle(QApplication::translate("MainWindow", "Edge Enhancement", nullptr));
        menu_Perspective_Transformation->setTitle(QApplication::translate("MainWindow", "Advanced", nullptr));
        menuColor->setTitle(QApplication::translate("MainWindow", "Color", nullptr));
        menuFilter->setTitle(QApplication::translate("MainWindow", "Filter", nullptr));
        menuSmooth->setTitle(QApplication::translate("MainWindow", "Smooth", nullptr));
    } // retranslateUi

};

namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_MAINWINDOW_H
